{"version":3,"file":"static/js/679.4a8ad1d1.chunk.js","mappings":"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","sources":["components/user-form/UserForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Loading, Dialog, Button, Form, Input, Select } from 'element-react';\r\nimport { useUserDispatch, useUserState} from '../../contexts/user';\r\n\r\nexport const UserForm = (props) => {\r\n  const {\r\n    showModal,\r\n    closeModal,\r\n    type,\r\n    user,\r\n  } = props;\r\n\r\n  const dispatchUser = useUserDispatch();\r\n  const { loading } = useUserState();\r\n  const [formUser, setFormUser] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    gender: '',\r\n    email: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!showModal) {\r\n      return;\r\n    }\r\n    if (user) {\r\n      setFormUser({...user});\r\n    } else {\r\n      setFormUser({\r\n        first_name: '',\r\n        last_name: '',\r\n        gender: '',\r\n        email: '',\r\n      });\r\n    }\r\n  }, [showModal]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const formRef = React.createRef(null);\r\n\r\n  const onSubmit = () => {\r\n    formRef.current.validate((isValid) => {\r\n      if (isValid) {\r\n        dispatchUser({ type: 'SET_PAYLOAD_USER', payload: formUser });\r\n        closeModal();\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChange = (key, value) => {\r\n    setFormUser({\r\n      ...formUser,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      title={`${type === 'new' ? 'Create' : type === 'edit' ? 'Update' : 'View'} User`}\r\n      size=\"tiny\"\r\n      visible={showModal}\r\n      onCancel={closeModal}\r\n      lockScroll={false}\r\n    >\r\n      <Loading loading={loading}>\r\n        <Dialog.Body>\r\n          <Form ref={formRef} model={formUser} labelWidth=\"120\">\r\n            {\r\n              user && user.id ?\r\n                <Form.Item label='ID'>\r\n                  <Input value={formUser.first_name} onChange={onChange.bind(this, 'first_name')}></Input>\r\n                </Form.Item>\r\n                : ''\r\n            }\r\n            <Form.Item label='First Name' prop='first_name' rules={{ required: true, message: 'Please input first name', trigger: 'blur' }}>\r\n              <Input className='w-full' value={formUser.first_name} onChange={onChange.bind(this, 'first_name')}></Input>\r\n            </Form.Item>\r\n            <Form.Item label='Last Name' prop='last_name' rules={{ required: true, message: 'Please input last name', trigger: 'blur' }}>\r\n              <Input className='w-full' value={formUser.last_name} onChange={onChange.bind(this, 'last_name')}></Input>\r\n            </Form.Item>\r\n            <Form.Item label='Email' prop='email' rules={{ required: true, message: 'Please input email', trigger: 'blur' }}>\r\n              <Input className='w-full' value={formUser.email} onChange={onChange.bind(this, 'email')}></Input>\r\n            </Form.Item>\r\n            <Form.Item label='Gender' prop='gender' rules={{ required: true, message: 'Please select gender', trigger: 'blur' }}>\r\n              <Select className='w-full' value={formUser.gender} placeholder=\"Select Gender\" onChange={onChange.bind(this, 'gender')}>\r\n                <Select.Option label=\"Bigender\" value=\"Bigender\"></Select.Option>\r\n                <Select.Option label=\"Male\" value=\"Male\"></Select.Option>\r\n                <Select.Option label=\"Female\" value=\"Female\"></Select.Option>\r\n              </Select>\r\n            </Form.Item>\r\n          </Form>\r\n        </Dialog.Body>\r\n        <Dialog.Footer className=\"dialog-footer\">\r\n          <Button onClick={closeModal}>Cancel</Button>\r\n          {\r\n            type !== 'view' ?\r\n              <Button type=\"primary\" onClick={onSubmit}>{ type === 'new' ? 'Create' : 'Update' }</Button>\r\n              : ''\r\n          }\r\n        </Dialog.Footer>\r\n      </Loading>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nUserForm.propTypes = {\r\n  showModal: PropTypes.bool,\r\n  closeModal: PropTypes.func,\r\n  type: PropTypes.string,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default UserForm;\r\n"],"names":["UserForm","props","showModal","closeModal","type","user","dispatchUser","useUserDispatch","loading","useUserState","useState","first_name","last_name","gender","email","formUser","setFormUser","useEffect","formRef","React","onChange","key","value","Dialog","title","size","visible","onCancel","lockScroll","Loading","Form","ref","model","labelWidth","id","label","Input","bind","prop","rules","required","message","trigger","className","Select","placeholder","Button","onClick","current","validate","isValid","payload"],"sourceRoot":""}